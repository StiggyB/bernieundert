package lagern;


/**
* lagern/LagerfachPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from lager.idl
* den 25 oktober 2010 kl 15:09 CEST
*/

public abstract class LagerfachPOA extends org.omg.PortableServer.Servant
 implements lagern.LagerfachOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("_get_besitzer", new java.lang.Integer (0));
    _methods.put ("_set_besitzer", new java.lang.Integer (1));
    _methods.put ("_get_anzahl", new java.lang.Integer (2));
    _methods.put ("einlagern", new java.lang.Integer (3));
    _methods.put ("auslagern", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // lagern/Lagerfach/_get_besitzer
       {
         String $result = null;
         $result = this.besitzer ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // lagern/Lagerfach/_set_besitzer
       {
         String newBesitzer = in.read_string ();
         this.besitzer (newBesitzer);
         out = $rh.createReply();
         break;
       }

       case 2:  // lagern/Lagerfach/_get_anzahl
       {
         int $result = (int)0;
         $result = this.anzahl ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 3:  // lagern/Lagerfach/einlagern
       {
         try {
           String user = in.read_string ();
           int anzahl = in.read_long ();
           this.einlagern (user, anzahl);
           out = $rh.createReply();
         } catch (lagern.LagerfachPackage.invalidCount $ex) {
           out = $rh.createExceptionReply ();
           lagern.LagerfachPackage.invalidCountHelper.write (out, $ex);
         }
         break;
       }

       case 4:  // lagern/Lagerfach/auslagern
       {
         try {
           String user = in.read_string ();
           int anzahl = in.read_long ();
           this.auslagern (user, anzahl);
           out = $rh.createReply();
         } catch (lagern.LagerfachPackage.invalidCount $ex) {
           out = $rh.createExceptionReply ();
           lagern.LagerfachPackage.invalidCountHelper.write (out, $ex);
         } catch (lagern.LagerfachPackage.notEnoughPieces $ex) {
           out = $rh.createExceptionReply ();
           lagern.LagerfachPackage.notEnoughPiecesHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:lagern/Lagerfach:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Lagerfach _this() 
  {
    return LagerfachHelper.narrow(
    super._this_object());
  }

  public Lagerfach _this(org.omg.CORBA.ORB orb) 
  {
    return LagerfachHelper.narrow(
    super._this_object(orb));
  }


} // class LagerfachPOA
