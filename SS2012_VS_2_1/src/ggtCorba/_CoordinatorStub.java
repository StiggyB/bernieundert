package ggtCorba;


/**
* ggtCorba/_CoordinatorStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from ggt.idl
* Mittwoch, 2. Mai 2012 19:19 Uhr MESZ
*/

public class _CoordinatorStub extends org.omg.CORBA.portable.ObjectImpl implements ggtCorba.Coordinator
{

  public ggtCorba.Starter[] getStarters ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getStarters", true);
                $in = _invoke ($out);
                ggtCorba.Starter $result[] = ggtCorba.starterListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getStarters (        );
            } finally {
                _releaseReply ($in);
            }
  } // getStarters

  public void start (int minProcess, int maxProcess, int minDelay, int maxDelay, int timeout, int ggt, monitor.Monitor mntr) throws ggtCorba.CoordinatorPackage.noStarters, ggtCorba.CoordinatorPackage.calculationInProgress
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("start", true);
                $out.write_long (minProcess);
                $out.write_long (maxProcess);
                $out.write_long (minDelay);
                $out.write_long (maxDelay);
                $out.write_long (timeout);
                $out.write_long (ggt);
                monitor.MonitorHelper.write ($out, mntr);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ggtCorba/Coordinator/noStarters:1.0"))
                    throw ggtCorba.CoordinatorPackage.noStartersHelper.read ($in);
                else if (_id.equals ("IDL:ggtCorba/Coordinator/calculationInProgress:1.0"))
                    throw ggtCorba.CoordinatorPackage.calculationInProgressHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                start (minProcess, maxProcess, minDelay, maxDelay, timeout, ggt, mntr        );
            } finally {
                _releaseReply ($in);
            }
  } // start

  public boolean shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  public boolean isCalculating ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("isCalculating", true);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return isCalculating (        );
            } finally {
                _releaseReply ($in);
            }
  } // isCalculating

  public void registerStarter (ggtCorba.Starter starter) throws ggtCorba.CoordinatorPackage.starterAlreadyExists
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("registerStarter", true);
                ggtCorba.StarterHelper.write ($out, starter);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ggtCorba/Coordinator/starterAlreadyExists:1.0"))
                    throw ggtCorba.CoordinatorPackage.starterAlreadyExistsHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                registerStarter (starter        );
            } finally {
                _releaseReply ($in);
            }
  } // registerStarter

  public void registerProcess (ggtCorba.ggtProcess process, String processName)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("registerProcess", true);
                ggtCorba.ggtProcessHelper.write ($out, process);
                $out.write_string (processName);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                registerProcess (process, processName        );
            } finally {
                _releaseReply ($in);
            }
  } // registerProcess

  public void unregisterStarter (ggtCorba.Starter starter) throws ggtCorba.CoordinatorPackage.starterDoesNotExists
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("unregisterStarter", true);
                ggtCorba.StarterHelper.write ($out, starter);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ggtCorba/Coordinator/starterDoesNotExists:1.0"))
                    throw ggtCorba.CoordinatorPackage.starterDoesNotExistsHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                unregisterStarter (starter        );
            } finally {
                _releaseReply ($in);
            }
  } // unregisterStarter

  public void processCalcDone (ggtCorba.ggtProcess process)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("processCalcDone", true);
                ggtCorba.ggtProcessHelper.write ($out, process);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                processCalcDone (process        );
            } finally {
                _releaseReply ($in);
            }
  } // processCalcDone

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:ggtCorba/Coordinator:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _CoordinatorStub
